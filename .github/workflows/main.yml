name: Unified Data Update

on:
  schedule:
    # Every 6 hours, Tuesday through Saturday (UTC)
    # Runs at: 00:00, 06:00, 12:00, 18:00 UTC
    - cron: "0 */6 * * 2-6"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: üì¶ Download previous data artifact
        uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
        with:
          name: tickerlake-data
          path: ./data
          workflow: main.yml
          workflow_conclusion: success
          if_no_artifact_found: warn
        continue-on-error: true # First run won't have an artifact

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version-file: ".python-version"

      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          version: "latest"
          enable-cache: true

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: ü•â Update bronze layer
        run: uv run bronze
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          POLYGON_ACCESS_KEY_ID: ${{ secrets.POLYGON_ACCESS_KEY_ID }}
          POLYGON_SECRET_ACCESS_KEY: ${{ secrets.POLYGON_SECRET_ACCESS_KEY }}

      - name: ü•à Update silver data
        run: uv run silver
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}

      - name: ü•á Update gold data
        run: uv run gold
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}

      - name: üìä Prepare Datasette databases
        run: uv run python container/prepare_datasette.py

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: üê≥ Build and push datasette container
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          platforms: linux/amd64
          push: true
          context: ./container
          file: ./container/Containerfile
          cache-from: type=gha
          cache-to: type=gha,mode=min
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Update deployment in selfhosted repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Clone the selfhosted repo (shallow clone for speed)
          git clone --depth 1 https://x-access-token:${{ secrets.SELFHOSTED_PAT }}@github.com/major/selfhosted.git
          cd selfhosted

          # Extract short digest for commit message
          SHORT_DIGEST=$(echo "${{ steps.build.outputs.digest }}" | cut -c1-12)

          # Update the image digest in the deployment
          sed -i "s|image: ghcr.io/major/tickerlake:latest@sha256:.*|image: ghcr.io/major/tickerlake:latest@${{ steps.build.outputs.digest }}|" apps/base/tickerlake/deployment.yaml

          # Check if there are changes to commit
          if git diff --quiet apps/base/tickerlake/deployment.yaml; then
            echo "No changes to deployment.yaml, skipping commit"
            exit 0
          fi

          # Commit and push
          git add apps/base/tickerlake/deployment.yaml
          git commit -m "Update tickerlake image to sha256:${SHORT_DIGEST}"
          git push

      - name: üì¶ Upload data artifact for next run
        uses: actions/upload-artifact@ea0b2446fa7a7b51623e5bb83a8993bcd6c1ee92 # v4
        if: success()
        with:
          name: tickerlake-data
          path: ./data
          retention-days: 50
          compression-level: 9
